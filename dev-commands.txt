------------------------------------------------------------------------------------
VI Commands

1) remove all white space in a file and replace with a comma
First delete the blank lines:
:g/^\s*$/d
Then use a substitution (:s///) over each line (%) to replace all (g) continuous whitespace (\s\+) with a comma (,)
:%s/\s\+/,/g

2) replace character/word in a file
replace 'foo' with 'bar' in a file
:%s/foo/bar/g
replace only whole words exactly match
:%s/\<foo\>/bar/g

3) search word and list line number in a file
:g/word/#

4) search word in all files under current folder and list them
:cw | grep -ir word .


------------------------------------------------------------------------------------
Valgrind

// profile tool, performance analysis
valgrind --tool=callgrind program arg1 arg2
kcachegrind callgrind.out.$pid
http://baptiste-wicht.com/posts/2011/09/profile-c-application-with-callgrind-kcachegrind.html

// detect memory-related errors
valgrind --leak-check=yes myprog arg1 arg2
http://valgrind.org/docs/manual/quick-start.html

// detect multi-thread errors
valgrind --tool=helgrind myapplication
http://valgrind.org/docs/manual/hg-manual.html


------------------------------------------------------------------------------------
How to check system memory, virtual memory usage and configuration?
$ free // Check system memory usage
$ vmstat // Virtual memory statistics
$ vmstat -s
$ swapon -s // Display swap usage by device

Display file or file system status
$ stat

------------------------------------------------------------------------------------
How to check CPU infromation?
$ lscpu
$ cat /proc/cpuinfo

------------------------------------------------------------------------------------
GDB commands:
$ set variable i=20
$ set var i=20
$ set (i=20)

$ display i
$ disp i

$ watch i // trigger when i changes

$ delete breakpoint

$ info break
$ info watch

------------------------------------------------------------------------------------
Network commands
$ ss -s // sockets summary
$ ss -lp // view open network ports with process name (p)
$ ss -aplt // view all tcp (t) sockets
$ ss -aplu // view all udp (u) sockets
$ netstat -lnpt // view processes that are listening for tcp (t)
$ netstat -lnpu // view processes that are listening for udp (t)
$ ifconfig // can view if multicast is enabled or not
$ netstat -g // view multicast groups information

------------------------------------------------------------------------------------
Analyze kernel crash
http://www.dedoimedo.com/computers/crash-analyze.html

------------------------------------------------------------------------------------
Debug core file
http://yusufonlinux.blogspot.com/2010/11/debugging-core-using-gdb.html
Enable core file dump
http://www.cyberciti.biz/tips/linux-core-dumps.html
1) Go to /etc/profile.d folder and create a *.sh file such as coredump.sh
ulimit -c unlimited >/dev/null 2>&1
2) Edit /etc/sysctl.conf, append the following lines:

kernel.core_uses_pid = 1
kernel.core_pattern = /tmp/core-%e-%s-%u-%g-%p-%t
fs.suid_dumpable = 2

Where:
kernel.core_uses_pid = 1 – Appends the coring processes PID to the core file name.
fs.suid_dumpable = 2 – Make sure you get core dumps for setuid programs.
kernel.core_pattern = /tmp/core-%e-%s-%u-%g-%p-%t – When the application terminates abnormally, a core file should appear in the /tmp. The kernel.core_pattern sysctl controls exact location of core file. You can define the core file name with the following template whih can contain % specifiers which are substituted by the following values when a core file is created:
%% – A single % character
%p – PID of dumped process
%u – real UID of dumped process
%g – real GID of dumped process
%s – number of signal causing dump
%t – time of dump (seconds since 0:00h, 1 Jan 1970)
%h – hostname (same as ’nodename’ returned by uname(2))
%e – executable filename

3) Reload the settings in /etc/sysctl.conf by running the following command:
$ sysctl -p

------------------------------------------------------------------------------------
/etc/profile vs. /etc/bashrc, Login vs. non-Login shell, Interactive vs. non-Interactive shell
http://bencane.com/2013/09/16/understanding-a-little-more-about-etcprofile-and-etcbashrc/
http://askubuntu.com/questions/247738/why-is-etc-profile-not-invoked-for-non-login-shells



